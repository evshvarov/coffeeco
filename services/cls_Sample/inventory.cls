/// in step 2 add json.adaptor and jsonfieldname properties
Class ICO.inventory Extends (%Persistent, %JSON.Adaptor) [ ClassType = persistent, DdlAllowed, Final, Owner = {_SYSTEM}, ProcedureBlock, SqlRowIdPrivate, SqlTableName = inventory ]
{

Property vendorid As %Library.String(%JSONFIELDNAME = "vendor_id", MAXLEN = 128) [ SqlColumnNumber = 2, SqlFieldName = vendor_id ];

Property vendorproductcode As %Library.String(%JSONFIELDNAME = "vendor_product_code", MAXLEN = 128) [ SqlColumnNumber = 3, SqlFieldName = vendor_product_code ];

Property quantitykg As %Library.Numeric(%JSONFIELDNAME = "quantity_kg", MAXVAL = 99999999.99, MINVAL = -99999999.99, SCALE = 2) [ SqlColumnNumber = 4, SqlFieldName = quantity_kg ];

Property datearrival As %Library.Date(%JSONFIELDNAME = "date_arrival") [ SqlColumnNumber = 5, SqlFieldName = date_arrival ];

Property datedeparture As %Library.Date(%JSONFIELDNAME = "date_departure") [ SqlColumnNumber = 6, SqlFieldName = date_departure ];

Parameter USEEXTENTSET = 1;

/// Bitmap Extent Index auto-generated by DDL CREATE TABLE statement.  Do not edit the SqlName of this index.
Index DDLBEIndex [ Extent, SqlName = "%%DDLBEIndex", Type = bitmap ];

Storage Default
{
<Data name="inventoryDefaultData">
<Value name="1">
<Value>vendorid</Value>
</Value>
<Value name="2">
<Value>vendorproductcode</Value>
</Value>
<Value name="3">
<Value>quantitykg</Value>
</Value>
<Value name="4">
<Value>datearrival</Value>
</Value>
<Value name="5">
<Value>datedeparture</Value>
</Value>
</Data>
<DataLocation>^DSrZ.DFAS.1</DataLocation>
<DefaultData>inventoryDefaultData</DefaultData>
<ExtentLocation>^DSrZ.DFAS</ExtentLocation>
<IdFunction>sequence</IdFunction>
<IdLocation>^DSrZ.DFAS.1</IdLocation>
<Index name="DDLBEIndex">
<Location>^DSrZ.DFAS.2</Location>
</Index>
<Index name="IDKEY">
<Location>^DSrZ.DFAS.1</Location>
</Index>
<IndexLocation>^DSrZ.DFAS.I</IndexLocation>
<StreamLocation>^DSrZ.DFAS.S</StreamLocation>
<Type>%Storage.Persistent</Type>
}

}
